{"version":3,"sources":["components/FourSplit/FourSplit.js","components/Input/Input.js","components/ReactForm/ReactForm.js","components/ReactForm/ReactForm2.js","components/ProgressBar/ProgressBar.js","components/ProgressBar/ProgressApp.js","index.js","App.js"],"names":["fourSplitStyles","height","display","gridTemplateColumns","gridItem","maxWidth","justifyContent","alignItems","border","FourSplit","props","react_default","a","createElement","style","elemOne","elemTwo","elemThree","elemFour","Input","check","e","console","log","target","checkValidity","className","title","type","value","name","onChange","handleInputChange","required","onBlur","onFocus","ReactForm","_useState","useState","_useState2","Object","slicedToArray","formValid","setFormValid","_useState3","lastName","email","phoneNumber","_useState4","userInput","setUserInput","event","_event$target","objectSpread","defineProperty","needsValidation","clearValidation","Fragment","noValidate","onSubmit","preventDefault","ReactForm2","onClick","progressStyles","ProgressBar","goalSet","progressColor","doneAmount","goalAmount","toFixed","flexGrow","role","minWidth","width","concat","marginLeft","cursor","toggle","ProgressApp","setGoalSet","setGoalAmount","_useState5","_useState6","setDoneAmount","handleInputChangeProgressBar","parseInt","resetAmountsProgressBar","handleToggleClickProgressBar","addToDoneProgressBar","ProgressBar_ProgressBar","mainBodySwitch","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09ffaad2.chunk.js","sourcesContent":["import React from 'react';\n\nlet fourSplitStyles = {\n  height: \"100vh\",\n  display: \"grid\",\n  gridTemplateColumns: \"auto auto\"\n}\n\nlet gridItem = {\n  maxWidth: \"50vw\",\n  display: \"flex\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  border: \"blue 1px solid\"\n}\n\n// Simple render like this;\nexport default function FourSplit(props) {\n  return (\n    <main style={fourSplitStyles}>\n      <div style={gridItem}>\n        {props.elemOne}\n      </div>\n\n      <div style={gridItem}>\n        {props.elemTwo}\n      </div>\n\n      <div style={gridItem}>\n        {props.elemThree}\n      </div>\n\n      <div style={gridItem}>\n        {props.elemFour}\n      </div>\n\n    </main>\n  );\n}\n","import React from 'react';\n\nexport default function Input(props) {\n  let check = e => {\n    console.log(e.target.checkValidity())\n  }\n  return (\n    <div className=\"col-md-6\">\n      <label>\n        <strong>{props.title}</strong>\n      </label>\n      <input\n        className=\"form-control\"\n        type={props.type}\n        value={props.value}\n        name={props.name}\n        onChange={props.handleInputChange}\n        required={props.required}\n        onBlur={() => check}\n        onFocus={() => console.log('focus')}\n      />\n      <div className=\"invalid-feedback\">Hmmm, something's not right.</div>\n    </div>\n  );\n}","import React, { useState } from 'react';\nimport Input from '../Input'\n\n// Simple render like this;\nexport default function ReactForm() {\n  const [formValid, setFormValid] = useState(false);\n\n  const [userInput, setUserInput] = useState({\n    lastName: '',\n    email: '',\n    phoneNumber: ''\n  });\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setUserInput({\n      ...userInput,\n      [name]: value\n    });\n  };\n\n  const validateForm = event => {\n    event.preventDefault();\n    console.log(event.target.checkValidity());\n    // Check validity of form before continuing\n    if (event.target.checkValidity()) {\n      // Do something / Submit form info\n      console.log('Form Submitted!')\n      // Clear validation\n      clearValidation();\n    } else {\n      // Some pieces of information missing, adding validation requirement\n      needsValidation();\n    }\n  };\n\n  // Update state to \"needs-validation\"\n  const needsValidation = () => setFormValid(true)\n\n  // Update state to original validation state\n  const clearValidation = () => setFormValid(false)\n\n  return (\n\n    <>\n      <h4>ReactForm Validate on Submit</h4>\n\n      <form\n        noValidate // This is important\n        className={formValid ? \"was-validated\" : \"\"}\n        onSubmit={validateForm}\n      >\n        <div className=\"form-group row\">\n          <Input\n            title=\"Last Name\"\n            name=\"lastName\"\n            type=\"text\"\n            value={userInput[\"lastName\"]}\n            handleInputChange={handleInputChange}\n            required={true}\n          />\n          <Input\n            title=\"Email\"\n            name=\"email\"\n            type=\"email\"\n            value={userInput[\"email\"]}\n            handleInputChange={handleInputChange}\n            required={true}\n          />\n          <Input\n            title=\"Phone Number\"\n            name=\"phoneNumber\"\n            type=\"text\"\n            value={userInput[\"phoneNumber\"]}\n            handleInputChange={handleInputChange}\n            required={true}\n          />\n        </div>\n        <button className=\"btn btn-primary\">\n          Submit\n      </button>\n      </form>\n    </>\n\n  );\n}\n","import React, { useState } from 'react';\nimport Input from '../Input'\n\n// Simple render like this;\nexport default function ReactForm2() {\n  const [formValid, setFormValid] = useState(false);\n\n  const [userInput, setUserInput] = useState({\n    lastName: '',\n    email: '',\n    phoneNumber: ''\n  });\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setUserInput({\n      ...userInput,\n      [name]: value\n    });\n  };\n\n  const validateForm = event => {\n    event.preventDefault();\n    console.log(event.target.checkValidity());\n    // Check validity of form before continuing\n    if (event.target.checkValidity()) {\n      // Do something / Submit form info\n      console.log('Form Submitted!')\n      // Clear validation\n      clearValidation();\n    } else {\n      // Some pieces of information missing, adding validation requirement\n      needsValidation();\n    }\n  };\n\n  // Update state to \"needs-validation\"\n  const needsValidation = () => setFormValid(true)\n\n  // Update state to original validation state\n  const clearValidation = () => setFormValid(false)\n\n  return (\n\n    <>\n      <h4>ReactForm2 Validate onClick</h4>\n      <p>This could be useful if you'd like to trigger validation or submition from somewhere other than the normal submit.</p>\n      <form\n        noValidate // This is important\n        className={formValid ? \"was-validated\" : \"\"}\n      // onSubmit={validateForm}\n      >\n        <div className=\"form-group row\">\n          <Input\n            title=\"Last Name\"\n            name=\"lastName\"\n            type=\"text\"\n            value={userInput[\"lastName\"]}\n            handleInputChange={handleInputChange}\n            required={true}\n          />\n          <Input\n            title=\"Email\"\n            name=\"email\"\n            type=\"email\"\n            value={userInput[\"email\"]}\n            handleInputChange={handleInputChange}\n            required={true}\n          />\n          <Input\n            title=\"Phone Number\"\n            name=\"phoneNumber\"\n            type=\"text\"\n            value={userInput[\"phoneNumber\"]}\n            handleInputChange={handleInputChange}\n            required={true}\n          />\n        </div>\n      </form>\n      <button\n        className=\"btn btn-primary\"\n        onClick={validateForm}\n      >\n        Submit\n      </button>\n\n    </>\n  );\n}\n","import React from 'react'\nimport './index.css'\n\nlet progressStyles = {\n  display: 'flex',\n  // maxHeight: '50px'\n}\n\n// Simple render like this;\nexport default function ProgressBar(props) {\n\n  if (!props.goalSet) {\n    return null;\n  }\n  let progressColor = \"progress-bar progress-bar-info\";\n  if ((props.doneAmount / props.goalAmount * 100).toFixed(0) > 35) {\n    progressColor = \"progress-bar\";\n  }\n  if ((props.doneAmount / props.goalAmount * 100).toFixed(0) > 70) {\n    progressColor = \"progress-bar progress-bar-success\";\n  }\n  if ((props.doneAmount / props.goalAmount * 100).toFixed(0) > 99) {\n    progressColor = \"progress-bar progress-bar-warning\";\n  }\n\n  return (\n    <div style={progressStyles}>\n      <div\n        className=\"progress\"\n        style={{ flexGrow: 2 }}\n      >\n        <div\n          className={progressColor}\n          role=\"progressbar\"\n          style={{\n            minWidth: \"2em\",\n            width: `${props.doneAmount / props.goalAmount * 100}%`,\n            maxWidth: \"100%\"\n          }}\n        >\n          {(props.doneAmount / props.goalAmount * 100).toFixed(0)}%\n        </div>\n      </div>\n      <div\n        style={{\n          marginLeft: '5px',\n          cursor: \"pointer\"\n        }}\n        onClick={props.toggle}\n      >\n        <div className=\"octicon octicon-pencil\"></div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react'\nimport ProgressBar from './ProgressBar'\nimport './index.css'\n\n// Simple render like this;\nexport default function ProgressApp() {\n  const [goalSet, setGoalSet] = useState(false)\n  const [goalAmount, setGoalAmount] = useState(50)\n  const [doneAmount, setDoneAmount] = useState(0)\n\n\n  const handleInputChangeProgressBar = (event) => {\n    let { name, value } = event.target;\n    // Do not allow negative amounts\n    if (value < 0 || value === \"\") {\n      console.log(\"true\");\n      return;\n    } // else continue\n    value = parseInt(value);\n    if (name === \"goalAmount\") {\n      return setGoalAmount(value)\n    }\n    else {\n      return setDoneAmount(value)\n    }\n  }\n\n  const resetAmountsProgressBar = () => {\n    setGoalAmount(50)\n    setDoneAmount(0)\n  }\n\n  const handleToggleClickProgressBar = () => {\n    setGoalSet(!goalSet)\n  }\n\n  const addToDoneProgressBar = () => {\n    setDoneAmount(parseInt(doneAmount + 1))\n  }\n\n  // This will return different components based off of different states of app\n  const mainBodySwitch = () => {\n    switch (goalSet) {\n      // This is when goals have been set\n      case true:\n        return (\n          <div>\n            {(doneAmount / goalAmount * 100).toFixed(0) >=\n              100 ? (\n                <p className=\"progress-text\">Congrats, you met your goal!</p>\n              ) : (\n                <p className=\"progress-text\">\n                  Goal: {goalAmount} Current Finished:{\" \"}\n                  {doneAmount}\n                </p>\n              )}\n            <button\n              className=\"btn btn-primary\"\n              onClick={addToDoneProgressBar}\n            >\n              Done\n            </button>\n          </div>\n        );\n      case false:\n        // This is startup page, setting goal\n        return (\n          <div>\n            <h5>Track Your Progress!</h5>\n            <div>\n              Goal:{\" \"}\n              <input\n                type=\"number\"\n                name=\"goalAmount\"\n                value={goalAmount}\n                onChange={handleInputChangeProgressBar}\n              />\n              Current Finished:{\" \"}\n              <input\n                type=\"number\"\n                name=\"doneAmount\"\n                value={doneAmount}\n                onChange={handleInputChangeProgressBar}\n              />\n            </div>\n            <button\n              className=\"btn btn-primary\"\n              onClick={handleToggleClickProgressBar}\n            >\n              Set Goal\n            </button>\n            <button\n              className=\"btn btn-danger\"\n              onClick={resetAmountsProgressBar}\n            >\n              Reset\n            </button>\n          </div>\n        );\n      default:\n        return <div>Error in mainBodySwitch</div>\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <ProgressBar\n        goalSet={goalSet}\n        goalAmount={goalAmount}\n        doneAmount={doneAmount}\n        toggle={handleToggleClickProgressBar}\n      />\n      {mainBodySwitch()}\n    </div>\n\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));","import React from 'react'\nimport FourSplit from './components/FourSplit'\n// import SingleFrame from './components/SingleFrame'\nimport ReactForm, { ReactForm2 } from './components/ReactForm'\n// import ReactForm2 from './components/ReactForm'\nimport ProgressBar from './components/ProgressBar'\n\nexport default function App() {\n  return (\n\n    <div className=\"App container\">\n      {/* <SingleFrame>\n        <ProgressBar />\n      </SingleFrame> */}\n\n      <FourSplit\n        elemOne={<ReactForm />}\n        elemTwo={<ReactForm2 />}\n        elemThree={<ProgressBar />}\n        elemFour={<ProgressBar />}\n      />\n\n    </div>\n  );\n}\n"],"sourceRoot":""}